// This file was generated by Dashcode from Apple Inc.
// You may edit this file to customize your Dashboard widget.

//
// Function: load()
// Called by HTML body element's onload event when the widget is ready to startTime
//
function load()
{
    setupParts();
    document.body.onkeypress = endRound;
}

//
// Function: remove()
// Called when the widget has been removed from the Dashboard
//
function remove()
{
    // Stop any timers to prevent CPU usage
    // Remove any preferences as needed
    // widget.setPreferenceForKey(null, createInstancePreferenceKey("your-key"));
}

//
// Function: hide()
// Called when the widget has been hidden
//
function hide()
{
    // Stop any timers to prevent CPU usage
}

//
// Function: show()
// Called when the widget has been shown
//
function show()
{
    // RestartTime any timers that were stopped on hide
}

//
// Function: sync()
// Called when the widget has been synchronized with .Mac
//
function sync()
{
    // Retrieve any preference values that you need to be synchronized here
    // Use this for an instance key's value:
    // instancePreferenceValue = widget.preferenceForKey(null, createInstancePreferenceKey("your-key"));
    //
    // Or this for global key's value:
    // globalPreferenceValue = widget.preferenceForKey(null, "your-key");
}

//
// Function: showBack(event)
// Called when the info button is clicked to show the back of the widget
//
// event: onClick event from the info button
//
function showBack(event)
{
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToBack");
    }

    front.style.display = "none";
    back.style.display = "block";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

//
// Function: showFront(event)
// Called when the done button is clicked from the back of the widget
//
// event: onClick event from the done button
//
function showFront(event)
{
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToFront");
    }

    front.style.display="block";
    back.style.display="none";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

if (window.widget) {
    widget.onremove = remove;
    widget.onhide = hide;
    widget.onshow = show;
    widget.onsync = sync;
}

function $(x)
{
   return document.getElementById(x);
}

function nice(num)
{
	var x = num + '';
   alert(x);
	var rgx = /(\d+)(\d{3})/;
	while(rgx.test(x)) x = x.replace(rgx, '$1' + ',' + '$2');
	return x;
};

var playing = false;
var allowedChars = "abcdefghijklmnopqrstuvwxyz0123456789";
var allowedTime = 1500;
var char = null;
var startTime = null;
var endTime = null;
var score = 0;

function playGame(event)
{
   $("play").style.visibility = "hidden";
   $("out").innerHTML = "";
   $("out").style.visibility = "visible";

   $("biginfo").innerHTML = "Wait...";
   $("biginfo").style.visibility = "visible";

   $("score").innerHTML = "Get Ready!";

   allowedTime = 1500;
   score = 0;

   setTimeout(function()
   {
      $("biginfo").style.visibility = "hidden";
      $("score").innerHTML = "GO!";
      startRound();
      playing = true;
   }, 3000);
}

function startRound()
{
   char = allowedChars.charAt(Math.floor(Math.random() * allowedChars.length + 1) - 1);
   $("out").innerHTML = char;
   startTime = new Date();
}

function endRound(event)
{
   event.stopPropagation();
   if(!playing) return;

   var diff = (new Date()).getTime() - startTime.getTime();

   if((diff > allowedTime) || (diff <= 35))
   {
      gameOver();
      return;
   }

   if(String.fromCharCode(event.charCode).toLowerCase() == char.toLowerCase())
   {
      score += Math.floor(Math.pow(1.01, allowedTime - diff));
      $("score").innerHTML = nice(score);
      $("up").style.visibility = "visible";
      $("down").style.visibility = "hidden";
   }
   else
   {
      score = Math.floor(score * 0.9);
      $("score").innerHTML = nice(score);
      $("down").style.visibility = "visible";
      $("up").style.visibility = "hidden";
   }
   
   if(allowedTime >= 252) allowedTime *= 0.99; 

   startRound();
}

function gameOver()
{
   $("out").style.visibility = "hidden";
   $("up").style.visibility = "hidden";
   $("down").style.visibility = "hidden";
   $("biginfo").innerHTML = "Game Over";
   $("biginfo").style.visibility = "visible";

   setTimeout(function()
   {
      $("biginfo").style.visibility = "hidden";
      $("play").style.visibility = "visible";
      playing = false;
   }, 3000);
}

function gotoSite(event)
{
   window.widget.openURL("http://kc.bloople.net");
}